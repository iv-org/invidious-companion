name: Release Binaries

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+*'  # Trigger on semantic version tags
  workflow_dispatch:  # Allow manual triggering

env:
  DENO_COMPILED: true  # Required for compilation as seen in compile.env

jobs:
  build-binaries:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        target:
          - name: windows-x64
            target: x86_64-pc-windows-msvc
            ext: .exe
          - name: macos-x64
            target: x86_64-apple-darwin
            ext: ""
          - name: macos-arm64
            target: aarch64-apple-darwin
            ext: ""
          - name: linux-x64
            target: x86_64-unknown-linux-gnu
            ext: ""
          - name: linux-arm64
            target: aarch64-unknown-linux-gnu
            ext: ""
    
    steps:
      # Step 1: Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Need full history for git commands in compile task

      # Step 2: Setup Deno
      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      # Step 3: Cache Deno dependencies
      - name: Cache Deno dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/deno
          key: deno-${{ hashFiles('**/deno.lock') }}
          restore-keys: |
            deno-

      # Step 4: Create binaries directory
      - name: Create binaries directory
        run: mkdir -p ./binaries

      # Step 5: Build binary for target
      - name: Build binary for ${{ matrix.target.name }}
        run: |
          deno compile \
            --target ${{ matrix.target.target }} \
            --include ./src/lib/helpers/youtubePlayerReq.ts \
            --include ./src/lib/helpers/getFetchClient.ts \
            --output ./binaries/invidious-companion-${{ matrix.target.name }}${{ matrix.target.ext }} \
            --allow-import=github.com:443,jsr.io:443,cdn.jsdelivr.net:443,esm.sh:443,deno.land:443 \
            --allow-net \
            --allow-env \
            --allow-read \
            --allow-sys=hostname \
            --allow-write=/var/tmp/youtubei.js,/tmp/invidious-companion.sock \
            src/main.ts \
            --_version_date="$(git log -1 --format=%ci | awk '{print $1}' | sed s/-/./g)" \
            --_version_commit="$(git rev-list HEAD --max-count=1 --abbrev-commit)"

      # Step 6: Upload individual binary as artifact
      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: invidious-companion-${{ matrix.target.name }}
          path: ./binaries/invidious-companion-${{ matrix.target.name }}${{ matrix.target.ext }}
          retention-days: 7

  # Separate job to create the release with all binaries
  create-release:
    needs: build-binaries
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Create release directory and move binaries
        run: |
          mkdir -p ./release
          find ./artifacts -name 'invidious-companion-*' -type f -exec cp {} ./release/ \;
          ls -la ./release/

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: ./release/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}